name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: yapmc-linux
            package_type: deb
            installer_ext: .deb
          - os: windows-latest
            artifact_name: yapmc-windows
            package_type: exe
            installer_ext: .exe
          - os: macos-latest
            artifact_name: yapmc-macos
            package_type: dmg
            installer_ext: .dmg

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 25
      uses: actions/setup-java@v4
      with:
        java-version: '25'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn clean package

    - name: Create custom runtime with jlink (Linux/macOS)
      if: runner.os != 'Windows'
      run: |
        $JAVA_HOME/bin/jlink \
          --add-modules java.base,java.desktop,java.prefs,java.logging,java.net.http,java.naming \
          --output target/runtime \
          --strip-debug \
          --no-man-pages \
          --no-header-files \
          --compress=2
      shell: bash

    - name: Create custom runtime with jlink (Windows)
      if: runner.os == 'Windows'
      run: |
        & "$env:JAVA_HOME\bin\jlink.exe" `
          --add-modules java.base,java.desktop,java.prefs,java.logging,java.net.http,java.naming `
          --output target/runtime `
          --strip-debug `
          --no-man-pages `
          --no-header-files `
          --compress=2
      shell: powershell

    - name: Create installer with jpackage (Linux/macOS)
      if: runner.os != 'Windows'
      run: |
        $JAVA_HOME/bin/jpackage \
          --runtime-image target/runtime \
          --input target \
          --name YAPMC \
          --main-jar yapmc-1.0-SNAPSHOT.jar \
          --main-class com.overzealouspelican.Main \
          --type ${{ matrix.package_type }} \
          --app-version 1.0 \
          --vendor "YAPMC" \
          --description "Privacy-focused desktop API client" \
          --dest installers
      shell: bash

    - name: Create installer with jpackage (Windows)
      if: runner.os == 'Windows'
      run: |
        & "$env:JAVA_HOME\bin\jpackage.exe" `
          --runtime-image target/runtime `
          --input target `
          --name YAPMC `
          --main-jar yapmc-1.0-SNAPSHOT.jar `
          --main-class com.overzealouspelican.Main `
          --type ${{ matrix.package_type }} `
          --app-version 1.0 `
          --vendor "YAPMC" `
          --description "Privacy-focused desktop API client" `
          --dest installers
      shell: powershell

    - name: List generated files
      run: ls -R installers
      shell: bash

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: installers/*${{ matrix.installer_ext }}
        if-no-files-found: error

    - name: Upload to Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: installers/*${{ matrix.installer_ext }}
        fail_on_unmatched_files: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
