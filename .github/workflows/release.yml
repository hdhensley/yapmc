name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 25
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '25'

      - name: Build with Maven
        run: mvn clean package

      - name: Create Windows Installer
        run: |
          jpackage `
            --input target `
            --main-jar yapmc-1.0-SNAPSHOT.jar `
            --main-class com.overzealouspelican.Main `
            --name YAPMC `
            --type exe `
            --app-version 1.0.0 `
            --vendor "YAPMC" `
            --description "Privacy-focused desktop API client" `
            --java-options '-Xmx512m' `
            --win-dir-chooser `
            --win-menu `
            --win-shortcut
          
          Write-Host "=== Files in current directory after jpackage ==="
          Get-ChildItem
          Write-Host "=== Looking for EXE files ==="
          Get-ChildItem -Filter "*.exe" -ErrorAction SilentlyContinue
          if (-not (Test-Path "YAPMC-*.exe")) {
            Write-Host "ERROR: No EXE file was created!"
            exit 1
          }

      - name: Upload Windows Installer
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: "*.exe"
          if-no-files-found: error

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 25
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '25'

      - name: Build with Maven
        run: mvn clean package

      - name: Create macOS Installer
        run: |
          jpackage \
            --input target \
            --main-jar yapmc-1.0-SNAPSHOT.jar \
            --main-class com.overzealouspelican.Main \
            --name YAPMC \
            --type app-image \
            --app-version 1.0.0 \
            --vendor "YAPMC" \
            --description "Privacy-focused desktop API client" \
            --java-options '-Xmx512m' \
            --mac-package-name YAPMC
          
          # Ad-hoc sign the app bundle
          echo "=== Signing the app bundle ==="
          codesign --force --deep --sign - YAPMC.app
          codesign --verify --verbose YAPMC.app
          
          # Now create the DMG with the signed app
          echo "=== Creating DMG with signed app ==="
          jpackage \
            --app-image YAPMC.app \
            --type dmg \
            --app-version 1.0.0 \
            --name YAPMC \
            --vendor "YAPMC" \
            --description "Privacy-focused desktop API client" \
            --mac-package-name YAPMC
          
          # List all files to see what was created
          echo "=== Files in current directory after jpackage ==="
          ls -la
          echo "=== Looking for DMG files ==="
          ls -la *.dmg 2>/dev/null || echo "No .dmg files found with ls *.dmg"
          find . -name "*.dmg" -type f || echo "No .dmg files found with find"

      - name: Upload macOS Installer
        uses: actions/upload-artifact@v4
        with:
          name: macos-installer
          path: "*.dmg"
          if-no-files-found: error

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 25
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '25'

      - name: Build with Maven
        run: mvn clean package

      - name: Create Linux DEB Installer (with jlink workaround)
        run: |
          # Create a custom runtime by copying the full JDK to avoid ct.sym jlink bug in JDK 25
          cp -r $JAVA_HOME custom-runtime
          
          # Use jpackage with the custom runtime to bypass jlink
          jpackage \
            --input target \
            --main-jar yapmc-1.0-SNAPSHOT.jar \
            --main-class com.overzealouspelican.Main \
            --name yapmc \
            --type deb \
            --app-version 1.0 \
            --vendor "YAPMC" \
            --description "Privacy-focused desktop API client" \
            --java-options '-Xmx512m' \
            --runtime-image custom-runtime \
            --linux-package-name yapmc \
            --linux-app-category utils \
            --linux-shortcut
          
          # List all files to see what was created
          echo "=== Files in current directory after jpackage ==="
          ls -la
          echo "=== Looking for DEB files ==="
          ls -la *.deb 2>/dev/null || echo "No .deb files found with ls *.deb"
          find . -name "*.deb" -type f || echo "No .deb files found with find"

      - name: Upload Linux Installer
        uses: actions/upload-artifact@v4
        with:
          name: linux-installer
          path: "*.deb"
          if-no-files-found: error

  create-release:
    needs: [build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: List downloaded artifacts
        run: |
          echo "=== Downloaded artifacts structure ==="
          find . -type f

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            windows-installer/*.exe
            macos-installer/*.dmg
            linux-installer/*.deb
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
